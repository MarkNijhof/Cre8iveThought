
describe 'Demo object verify method being called'
	describe 'method_A'
		it 'will call method_B'
			demo_object = new DemoObject()
			demo_object.should.receive('method_B').with_args(4)
			demo_object.method_A(2)
		end

		it 'will call method_D with a String argument twice'
			demo_object = new DemoObject()
			demo_object.should.receive('method_D', 'twice').with_args(an_instance_of(String))
			demo_object.method_A(2)
		end

		it 'will call method_B which will return something the text test 4'
			demo_object = new DemoObject()
			demo_object.should.receive('method_B').with_args(4).and_return('test 4')
			demo_object.method_A(2)
		end
	end
end








describe 'Demo object will throw an error'
	describe 'method_C'
		it 'will throw an error when calling it with 0'
			demo_object = new DemoObject()
			-{demo_object.method_C(0)}.should.throw_error 'cannot devide by zero'
		end
	end
end








describe 'Demo object method is stubbed for a test'
	describe 'method_B'
		it 'will return something else then programmed'
			demo_object = new DemoObject()
			demo_object.stub('method_B').and_return('something else')
			demo_object.should.receive('method_B').with_args(4).and_return('something else')
			demo_object.method_A(2)
		end
	end
end








describe 'Demo object playing with timers'
	describe 'method_E'
		it 'will trigger a setTimeout that will run for 10 seconds'
			demo_object = new DemoObject()
			demo_object.method_E()
			Clock.tick(999)
			demo_object.method_E_results().should.be_false
			Clock.tick(1)
			demo_object.method_E_results().should.be_true
		end
	end
end








describe 'Demo object ajex request is mocked'
	describe 'getJSON'
	  before_each
	    mock_request().and_return({ foo: "bar" }, 'application/json', 200)
	  end
  
	  it 'should foo'
			was_response_called = false
	    $.getJSON('foo', function(response){
	      response.foo.should.eql 'bar'
				was_response_called = true
	    })
			was_response_called.should.be_true
	  end
	end
end








describe 'before after each or all'
	before
		before_value = true
		before_each_value = 0
		after_each_value = 0
	end
	
	before_each
		before_each_value += 1
		after_each_value += 1
	end
	
	after_each
		after_each_value -= 1
	end
	
	after
		// don't know how to show you this :)
	end
	
	it 'should be set in before'
		before_value.should.be_true
	end
	
	it 'should be set before each'
		before_each_value.should.be 2
	end
	
	it 'should be set after each'
		after_each_value.should.be 1
	end
end





