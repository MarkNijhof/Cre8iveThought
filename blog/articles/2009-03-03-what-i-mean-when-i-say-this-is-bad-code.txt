title: What I mean when I say, This is Bad code
author: Mark Nijhof
date: 03/03/2009
published: true

Well of course I mean that the code _is_ bad. But this has _nothing_ to do with the person who wrote the code. This small but so important detail is not understood by the majority of software developers. Actually it is something people in general find it hard to understand; the first reaction is often a defensive one.

But that way nobody learns, a golden opportunity for the author of the bad code to learn a better way and improve his skills, forever gone, out the window. Hey and also for me, I am often wrong, so explain it to me.

I am not saying you should confront the person in an offensive way, or in front of many others, that will never work. Ask if you can discuss a certain part of the code, because you have some questions / concerns about it. Then you can discuss the code and offer your advice and show what can be done to improve the code. Especially showing what to do is extremely important, because that is how someone can improve.

I for one want people to tell me when and where I can improve, I often ask what others think of certain solutions I created and about the presentations I did. Often the response is positive, now this is not because I am so good (I wish), it has to do with the fact that people expect that that is what you want to hear. I sometimes actually have to say, so where can I improve? I want to hear what I do wrong, that is how I learn.

So when somebody actually comes to you with some concerns about a solution you created, try to see this in a positive light. Embrace it and look at it as a moment to improve yourself. As you have already read there are not many of such moments, so use them well. And whether or not if the person is right you should be thanking him for bringing it up, encourage him to do it again. And return the favor.

Because trust me, when someone takes the time and energy to come to you and talk about his concerns it is because he is generally acting in goodwill. If he wanted to make a fool out of you then he would have done so publicly perhaps even submitted the code [here](http://thedailywtf.com/).

I hope that from now on you will be happy when someone tells you that you wrote bad code. Because you know that this is one of those rare opportunities that you can use to improve your skills to become even better at what you do. Next time I do something wrong, please tell me!